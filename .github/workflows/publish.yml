name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Where to release (staging or production)?'
        required: true
        default: 'staging'

jobs:
  setup:

    name: Setup Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Maven
        uses: stCarolas/setup-maven@v4.4
        with:
          maven-version: 3.8.2

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests with Maven
        run: mvn test

  staging:

    name: Deploy to Staging
    environment:
      name: staging
      url: http://177.44.248.40:8090/
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Merge to Staging
        run: |
          git fetch origin
          git checkout staging
          git merge main --no-ff --strategy-option theirs --allow-unrelated-histories
          git push origin staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  production:
    if: github.event.inputs.releaseType == 'production'
    name: Deploy to Prod
    environment:
      name: production
      url: http://177.44.248.40:8091/
    needs: [staging]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'


      - name: Merge to Production
        run: |
          git fetch origin
          git checkout production
          git merge origin/staging --no-ff --strategy-option theirs --allow-unrelated-histories
          git push origin production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}